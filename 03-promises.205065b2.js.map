{"mappings":"iiBAAA,IAQIA,EACAC,EATJC,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,uBAChCC,EAAOF,SAASC,cAAc,sBAC9BE,EAASH,SAASC,cAAc,wBAChCG,EAAOJ,SAASC,cAAc,SAEhCI,EAAI,EAIFC,EAAgB,SAACC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BhB,EAASiB,OAAOC,SAASd,EAAOe,OAChClB,EAAUgB,OAAOC,SAASX,EAAKY,OAE/BC,YAAW,WACaC,KAAKC,SAAW,GAGpCP,EAAQ,qBAAoCQ,OAAfX,EAAS,QAAYW,OAANV,EAAM,OAElDG,EAAO,oBAAmCO,OAAfX,EAAS,QAAYW,OAANV,EAAM,M,GAEjDb,EAASC,EAAUS,E,KAI1BD,EAAKe,iBAAiB,UAEtB,SAAsBC,GAIpB,IAHAA,EAAMC,iBACN1B,EAASiB,OAAOC,SAASd,EAAOe,OAChClB,EAAUgB,OAAOC,SAASX,EAAKY,OACvBT,EAAIO,OAAOC,SAASV,EAAOW,OAAQT,GAAK,EAC9CC,EAAcD,EAAI,EAAGV,EAASC,EAAUS,GACrCiB,MAAK,SAAAC,G,OAAWC,EAAA3B,GAAS4B,OAAOC,QAAQH,E,IACxCI,OAAM,SAAAhB,G,OAAUa,EAAA3B,GAAS4B,OAAOG,QAAQjB,E,IAE7CN,EAAI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delays = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst form = document.querySelector('.form');\n\nlet i = 0;\nlet delVal;\nlet stepVal;\n\nconst createPromise = (position, delay) => {\n  return new Promise((resolve, reject) => {\n    delVal = Number.parseInt(delays.value);\n    stepVal = Number.parseInt(step.value);\n\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve(`Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delVal + stepVal * i);\n  });\n};\n\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  delVal = Number.parseInt(delays.value);\n  stepVal = Number.parseInt(step.value);\n  for (i; i < Number.parseInt(amount.value); i += 1) {\n    createPromise(i + 1, delVal + stepVal * i)\n      .then(fulfill => Notiflix.Notify.success(fulfill))\n      .catch(reject => Notiflix.Notify.failure(reject));\n  }\n  i = 0;\n}"],"names":["$ce04d3a99e08e73b$var$delVal","$ce04d3a99e08e73b$var$stepVal","$6JpON","parcelRequire","$ce04d3a99e08e73b$var$delays","document","querySelector","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$form","$ce04d3a99e08e73b$var$i","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","Number","parseInt","value","setTimeout","Math","random","concat","addEventListener","event","preventDefault","then","fulfill","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.205065b2.js.map"}